
* Straight Package Manager 
** Bootstrapping straight
#+BEGIN_SRC emacs-lisp
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))
#+END_SRC
** Install use-package
#+BEGIN_SRC emacs-lisp
  (straight-use-package 'use-package)
  (use-package straight
    :custom (straight-use-package-by-default t))
#+END_SRC

* Emacs Startup
  Hide the startup message
#+BEGIN_SRC elisp
(setq inhibit-startup-message t)
#+END_SRC
   
* Backspace Key
  Set ctrl+h as backspace and ctrl+? as emacs-help
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-?") 'help-command)
(global-set-key (kbd "M-?") 'mark-paragraph)
(global-set-key (kbd "C-h") 'delete-backward-char)
(global-set-key (kbd "C-M-h") 'backward-kill-word)
#+END_SRC

* Helm
  Completions in the minibuffer
#+BEGIN_SRC elisp
  (use-package helm 
   :straight t
   :config
     (helm-mode 1)
   :bind (("M-x" . helm-M-x)
   ("C-x r b" . helm-filtered-bookmarks)
   ("C-x C-f" . helm-find-files)))
#+END_SRC

* Org Bullets
#+BEGIN_SRC elisp
  (use-package org-bullets
    :straight t
    :init
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+END_SRC

* Emacs theme
** Tango-dark theme
   Was not able to clone tango-dark-theme.el from Emacs repo. So created a personal repo, copied the .el file and cloned it.
#+BEGIN_SRC elisp
  ;; (use-package tango-dark-theme
  ;;    :straight (tango-dark-theme
  ;; 	      :host github 
  ;; 	      :repo "ankitf/tango-dark-theme"
  ;; 	      :branch "main")
     ;; :defer t
     ;; :config (load-theme 'tango-dark))

#+END_SRC
** Zenburn
   [[https://github.com/bbatsov/zenburn-emacs][Github]]
   Much better than tango-dark. Low contrast and cyan background is easy on the eye. Love it. :)
#+BEGIN_SRC elisp
  (use-package zenburn-theme
    :straight t
    :config
    (load-theme 'zenburn t))
#+END_SRC

* Simple Clip - Clipboard Copy/Paste
  Simplified access to sytem clipboard.
#+BEGIN_SRC elisp
  (use-package simpleclip
    :straight t
    :config
    (simpleclip-mode 1)
    :bind
    (("s-c" . simpleclip-copy)
     ("s-v" . simpleclip-paste)))
#+END_SRC

* Emacs Window Visuals
** Disable menu-bar, tool-bar and scroll-bar
#+BEGIN_SRC elisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
#+END_SRC
** Shrink fringes/borders to 1 pixel   
#+BEGIN_SRC elisp
(fringe-mode 1)
#+END_SRC

* Display time Mode
#+BEGIN_SRC elisp
  (setq display-time-default-load-average nil)
  (display-time-mode t)
#+END_SRC

* Python setup
** Python Virtual environment
   I have dedicated a virtual environment for emacs related python packages.
   Make sure to include the requirement.txt of this env to .emacs.d git repo.
#+BEGIN_SRC elisp
  (use-package pyvenv
    :straight t
    :config
    (pyvenv-activate "~/.virtualenvs/emacs-virtualenv"))
#+END_SRC
** Elpy
#+BEGIN_SRC elisp
  (use-package elpy
    :straight t
    :init
  (elpy-enable))
#+END_SRC   
** Jedi
#+BEGIN_SRC elisp
  (use-package jedi
    :straight t
    :init
    (add-hook 'python-mode-hook #'jedi:setup)
    :config
    (setq jedi:setup-keys t))
   ;; (setq jedi:complete-on-dot t)
#+END_SRC
** py-autopep8
#+BEGIN_SRC elisp
  (use-package py-autopep8
    :straight t
    :init
    (add-hook 'elpy-mode-hook #'py-autopep8-enable-on-save))
#+END_SRC      

* Hideshow - Code Folding
  Change the folding levels in the according to the language. 
#+BEGIN_SRC elisp
  (use-package hideshow
    :straight t
    :init
    (add-hook 'python-mode-hook #'hs-minor-mode)
    :bind (("C--" . "C-u 2 C-c @ C-l")  ;; Fold everything below level 2, very helpful in python class file.
	   ;; ("C--" . 'hs-hide-level)
	   ("C-=" . 'hs-toggle-hiding)))

#+END_SRC   

* Pomodoro Timer
  Productivity timer. Give undivided attention to a specific task for 25 mins. Take a short break after.
  Timer will start in the emacs status bar.
#+BEGIN_SRC elisp
  (use-package pomodoro
    :straight t
    :config
    (pomodoro-add-to-mode-line))
#+END_SRC 

* Ace window - Emacs window switching
#+BEGIN_SRC elisp
  (use-package ace-window
    :straight t
    :bind ("C-x o" . ace-window))
#+END_SRC
  
  
